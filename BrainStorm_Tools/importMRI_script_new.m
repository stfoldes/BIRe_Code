% Import a MRI data from Freesurfer_Reconstruction

% Build a head model

% Align model to HPIs per file


% Script generated by Brainstorm v3.1 (22-Nov-2013)

% Input files
sFiles = [];
SubjectNames = {...
    'NC01'};
RawFiles = {...
    '/home/foldes/Data/subjects/NC01/Initial/Freesurfer_Reconstruction'};

% % Start a new report
% bst_report('Start', sFiles);

% Process: Import anatomy folder
sFiles = bst_process(...
    'CallProcess', 'process_import_anatomy', ...
    sFiles, [], ...
    'subjectname', SubjectNames{1}, ...
    'mrifile', {RawFiles{1}, 'FreeSurfer'}, ...
    'nvertices', 15000, ...
    'nas', [0, 0, 0], ...
    'lpa', [0, 0, 0], ...
    'rpa', [0, 0, 0], ...
    'ac', [0, 0, 0], ...
    'pc', [0, 0, 0], ...
    'ih', [0, 0, 0]);

% % Save and display report
% ReportFile = bst_report('Save', sFiles);
% bst_report('Open', ReportFile);

% takes a little while

%% Import BEM
RawFiles = {...
    '', ...
    '/home/foldes/Data/subjects/NC01/Initial/Freesurfer_Reconstruction/bem/watershed_inner_skull_surface', ...
    '/home/foldes/Data/subjects/NC01/Initial/Freesurfer_Reconstruction/bem/watershed_outer_skull_surface'};

% Start a new report
bst_report('Start', sFiles);

% Process: Import surfaces
sFiles = bst_process(...
    'CallProcess', 'process_import_surfaces', ...
    sFiles, [], ...
    'subjectname', SubjectNames{1}, ...
    'headfile', {RawFiles{1}, RawFiles{1}}, ...
    'cortexfile1', {RawFiles{1}, RawFiles{1}}, ...
    'cortexfile2', {RawFiles{1}, RawFiles{1}}, ...
    'innerfile', {RawFiles{2}, 'FS'}, ...
    'outerfile', {RawFiles{3}, 'FS'}, ...
    'nverthead', 7000, ...
    'nvertcortex', 15000, ...
    'nvertskull', 7000);

%% Load MEG (w/ HPIs)

RawFiles = {...
    '/home/foldes/Data/MEG/NC01/S01/nc01s01r05.fif'};

RawFiles = {...
    '/home/foldes/Data/MEG/NC01/S01/nc01s01r05_sss.fif'};

% Process: Create link to raw file
sFiles = bst_process(...
    'CallProcess', 'process_import_data_raw', ...
    sFiles, [], ...
    'subjectname', SubjectNames{1}, ...
    'datafile', {RawFiles{1}, 'FIF'}, ...
    'channelreplace', 1, ...
    'channelalign', 1);

% Process: Events: Read from channel
sFiles = bst_process(...
    'CallProcess', 'process_evt_read', ...
    sFiles, [], ...
    'stimchan', 'STI101', ...
    'trackmode', 1, ...  % Value: detect the changes of channel value
    'zero', 0);

% Process: Import MEG/EEG: Events
sFiles = bst_process(...
    'CallProcess', 'process_import_data_event', ...
    sFiles, [], ...
    'subjectname', SubjectNames{1}, ...
    'condition', '3', ...
    'eventname', '3', ...
    'timewindow', [23, 306.999], ...
    'epochtime', [0, 0.5], ...
    'createcond', 1, ...
    'ignoreshort', 1, ...
    'usectfcomp', 1, ...
    'usessp', 1, ...
    'freq', [], ...
    'baseline', []);



%% Sources


% Input files
sFiles = {...
    'NC01/3/data_3_trial001.mat', ...
    'NC01/3/data_3_trial002.mat', ...
    'NC01/3/data_3_trial003.mat', ...
    'NC01/3/data_3_trial004.mat', ...
    'NC01/3/data_3_trial005.mat', ...
    'NC01/3/data_3_trial006.mat', ...
    'NC01/3/data_3_trial007.mat', ...
    'NC01/3/data_3_trial008.mat', ...
    'NC01/3/data_3_trial009.mat', ...
    'NC01/3/data_3_trial010.mat', ...
    'NC01/3/data_3_trial011.mat', ...
    'NC01/3/data_3_trial012.mat', ...
    'NC01/3/data_3_trial013.mat', ...
    'NC01/3/data_3_trial014.mat', ...
    'NC01/3/data_3_trial015.mat', ...
    'NC01/3/data_3_trial016.mat', ...
    'NC01/3/data_3_trial017.mat', ...
    'NC01/3/data_3_trial018.mat', ...
    'NC01/3/data_3_trial019.mat', ...
    'NC01/3/data_3_trial020.mat', ...
    'NC01/3/data_3_trial021.mat', ...
    'NC01/3/data_3_trial022.mat', ...
    'NC01/3/data_3_trial023.mat', ...
    'NC01/3/data_3_trial024.mat', ...
    'NC01/3/data_3_trial025.mat', ...
    'NC01/3/data_3_trial026.mat', ...
    'NC01/3/data_3_trial027.mat', ...
    'NC01/3/data_3_trial028.mat', ...
    'NC01/3/data_3_trial029.mat', ...
    'NC01/3/data_3_trial030.mat', ...
    'NC01/3/data_3_trial031.mat', ...
    'NC01/3/data_3_trial032.mat', ...
    'NC01/3/data_3_trial033.mat', ...
    'NC01/3/data_3_trial034.mat', ...
    'NC01/3/data_3_trial035.mat', ...
    'NC01/3/data_3_trial036.mat', ...
    'NC01/3/data_3_trial037.mat', ...
    'NC01/3/data_3_trial038.mat', ...
    'NC01/3/data_3_trial039.mat', ...
    'NC01/3/data_3_trial040.mat', ...
    'NC01/3/data_3_trial041.mat', ...
    'NC01/3/data_3_trial042.mat', ...
    'NC01/3/data_3_trial043.mat', ...
    'NC01/3/data_3_trial044.mat', ...
    'NC01/3/data_3_trial045.mat', ...
    'NC01/3/data_3_trial046.mat', ...
    'NC01/3/data_3_trial047.mat', ...
    'NC01/3/data_3_trial048.mat', ...
    'NC01/3/data_3_trial049.mat', ...
    'NC01/3/data_3_trial050.mat', ...
    'NC01/3/data_3_trial051.mat', ...
    'NC01/3/data_3_trial052.mat', ...
    'NC01/3/data_3_trial053.mat', ...
    'NC01/3/data_3_trial054.mat', ...
    'NC01/3/data_3_trial055.mat', ...
    'NC01/3/data_3_trial056.mat', ...
    'NC01/3/data_3_trial057.mat', ...
    'NC01/3/data_3_trial058.mat', ...
    'NC01/3/data_3_trial059.mat', ...
    'NC01/3/data_3_trial060.mat', ...
    'NC01/3/data_3_trial061.mat', ...
    'NC01/3/data_3_trial062.mat', ...
    'NC01/3/data_3_trial063.mat', ...
    'NC01/3/data_3_trial064.mat', ...
    'NC01/3/data_3_trial065.mat', ...
    'NC01/3/data_3_trial066.mat', ...
    'NC01/3/data_3_trial067.mat', ...
    'NC01/3/data_3_trial068.mat', ...
    'NC01/3/data_3_trial069.mat', ...
    'NC01/3/data_3_trial070.mat', ...
    'NC01/3/data_3_trial071.mat', ...
    'NC01/3/data_3_trial072.mat', ...
    'NC01/3/data_3_trial073.mat', ...
    'NC01/3/data_3_trial074.mat', ...
    'NC01/3/data_3_trial075.mat', ...
    'NC01/3/data_3_trial076.mat', ...
    'NC01/3/data_3_trial077.mat', ...
    'NC01/3/data_3_trial078.mat', ...
    'NC01/3/data_3_trial079.mat', ...
    'NC01/3/data_3_trial080.mat', ...
    'NC01/3/data_3_trial081.mat', ...
    'NC01/3/data_3_trial082.mat', ...
    'NC01/3/data_3_trial083.mat', ...
    'NC01/3/data_3_trial084.mat', ...
    'NC01/3/data_3_trial085.mat', ...
    'NC01/3/data_3_trial086.mat', ...
    'NC01/3/data_3_trial087.mat', ...
    'NC01/3/data_3_trial088.mat', ...
    'NC01/3/data_3_trial089.mat', ...
    'NC01/3/data_3_trial090.mat', ...
    'NC01/3/data_3_trial091.mat'};

% Process: Compute head model
sFiles = bst_process(...
    'CallProcess', 'process_headmodel', ...
    sFiles, [], ...
    'sourcespace', 1, ...
    'meg', 3, ...  % Overlapping spheres
    'eeg', 3, ...  % OpenMEEG BEM
    'ecog', 2, ...  % OpenMEEG BEM
    'seeg', 2, ...
    'openmeeg', struct(...
         'BemSelect', [1, 1, 1], ...
         'BemCond', [1, 0.0125, 1], ...
         'BemNames', {{'Scalp', 'Skull', 'Brain'}}, ...
         'BemFiles', {{}}, ...
         'isAdjoint', 0, ...
         'isAdaptative', 1, ...
         'isSplit', 0, ...
         'SplitLength', 4000));

% Process: Compute noise covariance
sFiles = bst_process(...
    'CallProcess', 'process_noisecov', ...
    sFiles, [], ...
    'baseline', [0, 0.5], ...
    'dcoffset', 1, ...
    'method', 1, ...  % Full noise covariance matrix
    'copycond', 0, ...
    'copysubj', 0);

% Process: Compute sources
sFiles = bst_process(...
    'CallProcess', 'process_inverse', ...
    sFiles, [], ...
    'method', 1, ...  % Minimum norm estimates (wMNE)
    'wmne', struct(...
         'SourceOrient', {{'free'}}, ...
         'loose', 0.2, ...
         'SNR', 3, ...
         'pca', 1, ...
         'diagnoise', 0, ...
         'regnoise', 1, ...
         'magreg', 0.1, ...
         'gradreg', 0.1, ...
         'depth', 1, ...
         'weightexp', 0.5, ...
         'weightlimit', 10), ...
    'sensortypes', 'MEG, MEG MAG, MEG GRAD, EEG', ...
    'output', 1);  % Kernel only: shared



% Process: Average: Everything
sFiles = bst_process(...
    'CallProcess', 'process_average', ...
    sFiles, [], ...
    'avgtype', 1, ...
    'avg_func', 1, ...  % <HTML>Arithmetic average: <FONT color="#777777">mean(x)</FONT>
    'keepevents', 1);









% Script generated by Brainstorm v3.1 (20-Jul-2012)

for isubject = 1:4
    clear subject FileNamesA
    
    switch isubject
%         case 1
%             subject = 'NS02S01';
%         case 2
%             subject = 'NS02S02';
%         case 3
%             subject = 'NS02S02post';
%         case 4
%             subject = 'NS02S03';
%         case 5
%             subject = 'NS02S03post';
%         case 6
%             subject = 'NS02S04';
%         case 7
%             subject = 'NS02S04post';
%         case 8
%             subject = 'NS02S11';
%         case 9
%             subject = 'NS02S11post';
        case 1
            subject = 'NS02S01LTGraspImitate';
        case 2
            subject = 'NS02S01LTGraspAttempt';
        case 3
            subject = 'NS02S01LTGraspImagine';
        case 4
            subject = 'NS02S01LTGraspObserve';
    end
    
    
    
% Input files
% FileNamesA = {...
%     'NS02S11post/Event_1/data_Event__1_trial001.mat', ...
%     'NS02S11post/Event_1/data_Event__1_trial002.mat', ...
%     'NS02S11post/Event_1/data_Event__1_trial003.mat', ...
%     'NS02S11post/Event_1/data_Event__1_trial004.mat', ...
%     'NS02S11post/Event_1/data_Event__1_trial005.mat', ...
%     'NS02S11post/Event_1/data_Event__1_trial006.mat', ...
%     'NS02S11post/Event_1/data_Event__1_trial007.mat', ...
%     'NS02S11post/Event_1/data_Event__1_trial008.mat', ...
%     'NS02S11post/Event_1/data_Event__1_trial009.mat', ...
%     'NS02S11post/Event_1/data_Event__1_trial010.mat'};

% eval(['FileNamesA = {''' subject '/Event_1/data_Event__1_trial001.mat'',''' subject '/Event_1/data_Event__1_trial002.mat'',''' subject '/Event_1/data_Event__1_trial003.mat'',''' subject '/Event_1/data_Event__1_trial004.mat'',''' subject '/Event_1/data_Event__1_trial005.mat'',''' subject '/Event_1/data_Event__1_trial006.mat'',''' subject '/Event_1/data_Event__1_trial007.mat'',''' subject '/Event_1/data_Event__1_trial008.mat'',''' subject '/Event_1/data_Event__1_trial009.mat'',''' subject '/Event_1/data_Event__1_trial010.mat''};'])
eval(['FileNamesA = {''' subject '/2/data_2_trial001.mat'',''' subject '/2/data_2_trial002.mat'',''' subject '/2/data_2_trial003.mat'',''' subject '/2/data_2_trial004.mat'',''' subject '/2/data_2_trial005.mat'',''' subject '/2/data_2_trial006.mat'',''' subject '/2/data_2_trial007.mat'',''' subject '/2/data_2_trial008.mat'',''' subject '/2/data_2_trial009.mat'',''' subject '/2/data_2_trial010.mat''};'])


% Start a new report
bst_report('Start', FileNamesA);

% Process: Compute head model
sFiles = bst_process(...
    'CallProcess', 'process_headmodel', ...
    FileNamesA, [], ...
    'sourcespace', 1, ...
    'meg', {3, {'<none>', 'Single sphere', 'Overlapping spheres', 'OpenMEEG BEM'}}, ...
    'eeg', {3, {'<none>', '3-shell sphere', 'OpenMEEG BEM'}}, ...
    'openmeeg', struct(...
         'BemFiles', {{}}, ...
         'BemNames', {{'Scalp', 'Skull', 'Brain'}}, ...
         'BemCond', [1, 0.0125, 1], ...
         'BemSelect', [1, 1, 1], ...
         'isAdjoint', 0, ...
         'isAdaptative', 1, ...
         'isSplit', 0, ...
         'SplitLength', 4000));

% Process: Compute noise covariance
sFiles = bst_process(...
    'CallProcess', 'process_noisecov', ...
    sFiles, [], ...
    'baseline', [-0.5, -0.001], ...
    'dcoffset', 1, ...
    'method', 1, ...
    'copycond', 0, ...
    'copysubj', 0);

% Process: Average: By condition
sFiles = bst_process(...
    'CallProcess', 'process_average', ...
    sFiles, [], ...
    'avgtype', 3);

% Process: Compute sources
sFiles = bst_process(...
    'CallProcess', 'process_inverse', ...
    sFiles, [], ...
    'method', 1, ...
    'wmne', struct(...
         'NoiseCov', [], ...
         'InverseMethod', 'wmne', ...
         'SNR', 3, ...
         'diagnoise', 0, ...
         'SourceOrient', {{'fixed'}}, ...
         'loose', 0.2, ...
         'depth', 1, ...
         'weightexp', 0.5, ...
         'weightlimit', 10, ...
         'regnoise', 1, ...
         'magreg', 0.1, ...
         'gradreg', 0.1, ...
         'eegreg', 0.1, ...
         'fMRI', [], ...
         'fMRIthresh', [], ...
         'fMRIoff', 0.1, ...
         'pca', 1), ...
    'sensortypes', 'MEG, MEG MAG, MEG GRAD, EEG', ...
    'output', 1);

% Save and display report
% ReportFile = bst_report('Save', sFiles);
% bst_report('Open', ReportFile);



end